# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 0.1.{build}-{branch}

# branches to build
branches:
  only:
    - master
    - develop
    - /release.*/

#---------------------------------#
#    environment configuration    #
#---------------------------------#

environment:
  # Don't report back to the mothership
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  notify_email:
    secure: B/pszqp3uDSr0AilztIkE8L55g3HY7dsGkUuDpGE2vZozoHqaYSblB5feHtFG2v2

# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
- ps: $Env:LABEL = "alpha-" + $Env:APPVEYOR_BUILD_NUMBER.PadLeft(5, "0")

cache:
#- packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
- '%USERPROFILE%\.nuget\packages'

# enable service required for build/tests
services:
#  - mssql2014           # start SQL Server 2014 Express

# scripts that run after cloning repository
install:
  # by default, all script lines are interpreted as batch
  #- echo This is batch
  # to run script as a PowerShell command prepend it with ps:
  #- ps: Write-Host 'This is PowerShell'

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

build:
  parallel: true                  # enable MSBuild parallel builds
  project: AdminTools.sln      # path to Visual Studio solution or project
  publish_wap: true               # package Web Application Projects (WAP) for Web Deploy
  verbosity: normal

# scripts to run before build
before_build:
- appveyor-retry dotnet restore -v Minimal

# to run your custom scripts instead of automatic MSBuild
build_script:
- dotnet build "src\AdminTools.Data" -c %CONFIGURATION% --no-dependencies --version-suffix %LABEL%
- dotnet build "src\AdminTools.Services" -c %CONFIGURATION% --no-dependencies --version-suffix %LABEL%
- dotnet build "src\AdminTools.Web" -c %CONFIGURATION% --no-dependencies --version-suffix %LABEL%

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:
- dotnet pack "src\AdminTools.Data" -c %CONFIGURATION% --no-build --version-suffix %LABEL% -o artifacts
- dotnet pack "src\AdminTools.Services" -c %CONFIGURATION% --no-build --version-suffix %LABEL% -o artifacts
- dotnet pack "src\AdminTools.Web" -c %CONFIGURATION% --no-build --version-suffix %LABEL% -o artifacts

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
- path: artifacts\**\*.*

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:

# on build failure
on_failure:

# after build failure or success
on_finish:

#---------------------------------#
#         notifications           #
#---------------------------------#

#notifications:
