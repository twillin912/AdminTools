# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 0.0.0.{build}.{branch}

pull_requests:  
  do_not_increment_build_number: true

# branches to build
branches:
  # whitelist
  only:
    - master
    - develop

# Skipping commits with particular message or from specific user
# skip_commits:
#   message: /Created.*\.(png|jpg|jpeg|bmp|gif)/      # Regex for matching commit message
#   author: John                                      # Commit author's username, name, email or regexp maching one of these.

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
skip_commits:
  files:
    - docs/*

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
os: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
  - cmd: git config --global core.autocrlf true
  - cmd: dnvm update

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified

# enable service required for build/tests
services:
  - iis                 # start IIS
  - mssql2012sp1        # start SQL Server 2014 Express

install:
  - cmd: set semantic_version=%APPVEYOR_BUILD_VERSION:~0,5%
  - cmd: echo Version - %semantic_version%
  - cmd: nuget sources add -Name api.nuget.org -Source https://api.nuget.org/v3/index.json

# Automatically register private account and/or project AppVeyor NuGet feeds.
nuget:
  account_feed: true
  disable_publish_on_pr: true     # disable publishing of .nupkg artifacts to
                                  # account/project feeds for pull request builds
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '$(semantic_version).{build}'
  assembly_file_version: '$(semantic_version).{build}'
  assembly_informational_version: '$(semantic_version)'

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# to add several configurations to build matrix:
configuration:
  - Debug
  - Release

# scripts to run before build
before_build:
  - cmd: dotnet restore ./src/AdminTools.Data
  - cmd: dotnet restore ./src/AdminTools.Services
  - cmd: dotnet restore ./src/AdminTools.Web

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:
  - cmd: dotnet build ./src/AdminTools.Data
  - cmd: dotnet build ./src/AdminTools.Services
  - cmd: dotnet build ./src/AdminTools.Web

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test: off


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  # pushing all *.nupkg files in build directory recursively
  - path: '**\*.nupkg'
    name: NuGet

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

    # Deploy to GitHub Releases
  - provider: GitHub
    auth_token:
      secure: VLy0WpsfUW1i/jkuq4tyx3pBGVYX4f6orxsWfl7xM3RhwNE+r9VSTeNX9hj7jwH8
    artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
    on:
      branch: master                # release from master branch only

# scripts to run before deployment
before_deploy:
  - cmd: dotnet pack --no-build ./src/AdminTools.Data
  - cmd: dotnet pack --no-build ./src/AdminTools.Services
  - cmd: dotnet pack --no-build ./src/AdminTools.Web

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:

# on build failure
on_failure:

# after build failure or success
on_finish:


#---------------------------------#
#         notifications           #
#---------------------------------#

# notifications: 
